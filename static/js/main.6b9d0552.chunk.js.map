{"version":3,"sources":["ItemList.js","Form.js","ToDo.js","CreateAccount.js","SignIn.js","index.js","firebase.js"],"names":["Item","props","className","item","onClick","onDeleteItem","ItemList","items","map","index","Form","onSubmit","event","preventDefault","type","placeholder","value","onChange","putItemList","uid","db","getDatabase","dbItems","forEach","set","ref","ToDo","state","input","quote","quoteIsLoading","handleInputChange","bind","handleSubmit","handleDeleteItem","dbRef","get","child","this","then","snapshot","exists","console","log","val","Object","entries","key","push","setState","target","slice","indexOf","splice","id","signOut","React","Component","CreateAccount","email","e","password","onSwitch","SignIn","auth","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","App","signInPage","isSignedIn","onSubmitSignIn","onSubmitCreateAccount","onInputChange","onSignOut","signInWithEmailAndPassword","userCredential","user","catch","error","code","message","createUserWithEmailAndPassword","errorCode","errorMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b9d0552.chunk.js","sourcesContent":["function ItemList(props){\r\n\r\n    return (\r\n        <ul>\r\n            {props.items.map((item, index) => {\r\n                return (\r\n                    <Item\r\n                        key={index} \r\n                        item={item}\r\n                        onDeleteItem={props.onDeleteItem}\r\n                    />\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nfunction Item(props){\r\n\r\n    return (\r\n        <li className='item'>\r\n            <div className='itemText'>{props.item}</div>\r\n            <div className='options'>\r\n                <button\r\n                    className='delete' \r\n                    onClick={() => props.onDeleteItem(props.item)}\r\n                >X</button>\r\n            </div>\r\n            \r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ItemList;","\r\n\r\nfunction Form(props){\r\n\r\n    return(\r\n        <form \r\n            onSubmit={(event) => {\r\n            event.preventDefault();\r\n            props.onSubmit();\r\n        }}>\r\n            <label>\r\n                <input \r\n                    type='text'\r\n                    placeholder='To Do...'\r\n                    value={props.value} \r\n                    onChange={props.onChange}\r\n                />\r\n            </label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nimport ItemList from './ItemList';\r\nimport Form from './Form';\r\n\r\nimport {getDatabase, ref, child, get, set} from 'firebase/database';\r\n\r\n\r\nconst quoteAPI = 'http://quotes.rest/qod.json?category=inspire';\r\n\r\nconst quote = 'There are no limits. There are plateaus, but you must not stay there, you must go beyond them. If it kills you, it kills you. A man must constantly exceed his level.';\r\n\r\nclass ToDo extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {items: [], input: '', quote: quote, quoteIsLoading: false};\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const dbRef = ref(getDatabase());\r\n        \r\n        get(child(dbRef, `users/${this.props.uid}`)).then((snapshot) =>{\r\n            if(snapshot.exists()){\r\n                console.log(snapshot.val());\r\n\r\n                const items = [];\r\n                \r\n                for(const [key, value] of Object.entries(snapshot.val())){\r\n                    if(key !== 'id')\r\n                        items.push(value);\r\n                }\r\n\r\n                this.setState({\r\n                    items: items\r\n                });                \r\n            }\r\n        });\r\n\r\n        // fetch(quoteAPI)\r\n        //     .then(res => res.json())\r\n        //     .then(result => {\r\n        //         console.log(result);\r\n        //         const quote = result.contents.quotes[0].quote;\r\n        //         console.log(quote);\r\n        //         this.setState({quote: quote, quoteIsLoading: false});\r\n        //     });\r\n    }\r\n\r\n    handleInputChange(event){\r\n        console.log('handleInputChange');\r\n        this.setState({\r\n            input: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(){\r\n        const items = this.state.items.slice();\r\n        items.push(this.state.input);\r\n        \r\n        putItemList(items, this.props.uid);\r\n        \r\n        this.setState({\r\n            items: items,\r\n            input: ''\r\n        });\r\n    }\r\n\r\n    handleDeleteItem(item){\r\n        const items = this.state.items.slice();\r\n        const index = items.indexOf(item);\r\n        if (index > -1) {\r\n            items.splice(index, 1);\r\n        }\r\n\r\n        putItemList(items, this.props.uid);\r\n\r\n        this.setState({items: items})\r\n    }\r\n\r\n    render(){\r\n        let quote;\r\n        if(this.state.quoteIsLoading){\r\n            quote = (\r\n                <div className='loading'></div>\r\n            );\r\n        } else{\r\n            quote = <div><h1>{this.state.quote}</h1></div>\r\n        }\r\n\r\n        return (\r\n            <div id='todo'>\r\n                {quote}\r\n                <Form \r\n                    onSubmit={this.handleSubmit}\r\n                    onChange={this.handleInputChange}\r\n                    value={this.state.input}\r\n                      \r\n                />\r\n                <ItemList \r\n                    items={this.state.items} \r\n                    onDeleteItem={this.handleDeleteItem}    \r\n                />\r\n\r\n                <button onClick={this.props.signOut}>Sign Out</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction putItemList(items, uid){\r\n    const db = getDatabase();\r\n    const dbItems = {};\r\n\r\n    items.forEach((item, index) => {\r\n        dbItems[index] = item;\r\n    });\r\n\r\n    set(ref(db, 'users/' + uid), dbItems);\r\n}\r\n\r\nexport default ToDo;","import React from 'react';\r\n\r\nfunction CreateAccount(props){\r\n\r\n    \r\n        return(\r\n            \r\n            <form \r\n                className='account'\r\n                onSubmit={(event) => {\r\n                event.preventDefault();\r\n                props.onSubmit();\r\n            }}>\r\n                <h2>Create Account</h2>\r\n                <label>\r\n                    <h4>Email</h4>\r\n                    <input \r\n                        type='text'\r\n                        value={props.email}\r\n                        onChange={(e) => props.onChange(e, true)}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <h4>Password</h4>\r\n                    <input \r\n                        type='text'\r\n                        value={props.password}\r\n                        onChange={(e) => props.onChange(e, false)}\r\n                    />\r\n                </label>\r\n                \r\n                <input id='submit' type='submit' value='Create Account' />\r\n                <button type='button' onClick={props.onSwitch}>Sign In</button>\r\n            </form>\r\n        );\r\n    \r\n}\r\n\r\n\r\nexport default CreateAccount;","import React from 'react';\r\n\r\n\r\nfunction SignIn(props){\r\n\r\n    \r\n        return(\r\n            <form \r\n                className='account'\r\n                onSubmit={(event) => {\r\n                event.preventDefault();\r\n                props.onSubmit();\r\n                \r\n            }}>\r\n                <h2>Sign In</h2>\r\n                <label>\r\n                    <h4>Email</h4>\r\n                    <input \r\n                        type='text'\r\n                        value={props.email}\r\n                        onChange={(e) => props.onChange(e, true)}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <h4>Password</h4>\r\n                    <input \r\n                        type='password'\r\n                        value={props.password}\r\n                        onChange={(e) => props.onChange(e, false)}\r\n                    />\r\n                </label>\r\n                \r\n                <input id='submit' type='submit' value='Sign In' />\r\n                <button type='button' onClick={props.onSwitch}>Create Account</button>\r\n            </form>\r\n        );\r\n    \r\n}\r\n\r\n\r\nexport default SignIn;","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nimport ToDo from './ToDo';\r\nimport CreateAccount from './CreateAccount';\r\nimport SignIn from './SignIn';\r\n\r\nimport firebaseApp from './firebase';\r\n\r\nconst auth = getAuth();\r\n\r\nclass App extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            signInPage: true,\r\n            isSignedIn: false, \r\n            email: '', \r\n            password: '', \r\n            uid: ''\r\n        };\r\n\r\n        this.onSubmitSignIn = this.onSubmitSignIn.bind(this);\r\n        this.onSubmitCreateAccount = this.onSubmitCreateAccount.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onSwitch = this.onSwitch.bind(this);\r\n        this.onSignOut = this.onSignOut.bind(this);\r\n    }\r\n    \r\n    onSubmitSignIn(){\r\n        signInWithEmailAndPassword(auth, this.state.email, this.state.password)\r\n            .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user;\r\n            console.log(user);\r\n\r\n            this.setState({\r\n                isSignedIn: true,\r\n                uid: user.uid\r\n            });\r\n            \r\n            })\r\n            .catch((error) => {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            });\r\n    }\r\n\r\n    onSubmitCreateAccount(){\r\n        console.log('creating account');\r\n        createUserWithEmailAndPassword(auth, this.state.email, this.state.password)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n\r\n                this.setState({\r\n                    isSignedIn: true, \r\n                    uid: user.uid\r\n                });\r\n                // user authorized\r\n            })\r\n            .catch(error => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.log(errorCode, errorMessage);\r\n            });\r\n    }\r\n\r\n    onInputChange(event, email){\r\n        if(email){\r\n            this.setState({\r\n                email: event.target.value\r\n            });\r\n        } else{\r\n            this.setState({\r\n                password: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    onSwitch(){\r\n\r\n        this.setState({\r\n            signInPage: !this.state.signInPage\r\n        });\r\n    }\r\n\r\n    onSignOut(){\r\n\r\n        this.setState({\r\n            signInPage: true,\r\n            isSignedIn: false, \r\n            email: '', \r\n            password: '', \r\n            uid: ''\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div id='app'>\r\n                {this.state.isSignedIn ? \r\n                    <ToDo\r\n                        email={this.state.email}\r\n                        uid={this.state.uid}\r\n                        signOut={this.onSignOut}\r\n                    /> :\r\n                    <div>\r\n                        {this.state.signInPage ? \r\n                            <SignIn\r\n                                onSubmit={this.onSubmitSignIn}\r\n                                onChange={this.onInputChange}\r\n                                onSwitch={this.onSwitch}\r\n                            /> :\r\n                            <CreateAccount\r\n                                onSubmit={this.onSubmitCreateAccount}\r\n                                onChange={this.onInputChange}\r\n                                onSwitch={this.onSwitch}\r\n                            />\r\n                        }\r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n                }\r\n                \r\n            </div>\r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","import { initializeApp } from 'firebase/app';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDQHrBSWRCKlP7xTi1EjWCfeKkIzWaiXCg\",\r\n  authDomain: \"to-do-list-7afb6.firebaseapp.com\",\r\n  databaseURL: \"https://to-do-list-7afb6-default-rtdb.firebaseio.com\",\r\n  projectId: \"to-do-list-7afb6\",\r\n  storageBucket: \"to-do-list-7afb6.appspot.com\",\r\n  messagingSenderId: \"794757698427\",\r\n  appId: \"1:794757698427:web:35035036df6def644ea3de\",\r\n  measurementId: \"G-G5S7KF0R58\"\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\n\r\n\r\n\r\nexport default firebaseApp;"],"sourceRoot":""}